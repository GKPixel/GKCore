/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}
plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group = pluginGroup
version = pluginVersion
compileJava.options.encoding = 'UTF-8'
defaultTasks 'clean', 'build', 'shadowJar'


sourceCompatibility = '1.8'
targetCompatibility = '1.8'


repositories {
    mavenCentral()
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    //maven { url = 'https://mvnrepository.com/artifact/org.objenesis/objenesis' }
    
    //maven { url "https://jitpack.io/" }
    jcenter()
}


dependencies {
    compile 'org.objenesis:objenesis:3.1'
    compileOnly 'me.clip:placeholderapi:2.10.9'
  
    testCompile group: 'junit', name: 'junit', version: '4.12'
    
    //compileOnly group: "com.github.dmulloy2", name: "ProtocolLib", version: "4.5.1";
    //compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.5.1";
    compileOnly files('libs/ProtocolLib.jar')
    compileOnly files('libs/spigot-1.8.jar')
    compileOnly files('libs/craftbukkit-1.12.2.jar')

}

shadowJar {
    archiveName = "GKCore123-${version}.${extension}"
    relocate 'org.objenesis', 'gk.org.objenesis'
}

jar {
    baseName 'GKCore'
    manifest {
        attributes "Main-Class": "me.GK.core.main.GKCore"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}


